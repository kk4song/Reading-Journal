{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fmodern\fcharset0 Courier-Oblique;}
{\colortbl;\red255\green255\blue255;\red195\green123\blue90;\red23\green23\blue26;\red174\green176\blue183;
\red185\green101\blue173;\red89\green158\blue96;\red71\green149\blue242;\red103\green107\blue114;\red38\green157\blue169;
\red164\green160\blue78;}
{\*\expandedcolortbl;;\csgenericrgb\c76471\c48235\c35294;\csgenericrgb\c9020\c9020\c10196;\csgenericrgb\c68235\c69020\c71765;
\csgenericrgb\c72549\c39608\c67843;\csgenericrgb\c34902\c61961\c37647;\csgenericrgb\c27843\c58431\c94902;\csgenericrgb\c40392\c41961\c44706;\csgenericrgb\c14902\c61569\c66275;
\csgenericrgb\c64314\c62745\c30588;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 import \cf4 java.awt.*;\
\cf2 import \cf4 java.awt.event.*;\
\cf2 import \cf4 java.util.*;\
\cf2 import \cf4 javax.swing.*;\
\cf2 public class \cf4 LoginPage \cf2 implements \cf4 ActionListener \{\
\
    JFrame \cf5 frame \cf4 = \cf2 new \cf4 JFrame();\
    JButton \cf5 loginButton \cf4 = \cf2 new \cf4 JButton(\cf6 "Login"\cf4 );\
    JButton \cf5 resetButton \cf4 = \cf2 new \cf4 JButton(\cf6 "Reset"\cf4 );\
    JTextField \cf5 userIDField \cf4 = \cf2 new \cf4 JTextField();\
    JPasswordField \cf5 userPasswordField \cf4 = \cf2 new \cf4 JPasswordField();\
    JLabel \cf5 userIDLabel \cf4 = \cf2 new \cf4 JLabel(\cf6 "Username:"\cf4 );\
    JLabel \cf5 userPasswordLabel \cf4 = \cf2 new \cf4 JLabel(\cf6 "Password:"\cf4 );\
    JLabel \cf5 messageLabel \cf4 = \cf2 new \cf4 JLabel();\
    HashMap<String,String> \cf5 logininfo \cf4 = \cf2 new \cf4 HashMap<String,String>();\
\
    \cf7 LoginPage\cf4 (HashMap<String,String> loginInfoOriginal)\{\
\
        \cf5 logininfo \cf4 = loginInfoOriginal;\
\
        \cf8 // Setting the founds of the different textfields.\
        \cf5 userIDLabel\cf4 .setBounds(\cf9 50\cf4 ,\cf9 100\cf4 ,\cf9 75\cf4 ,\cf9 25\cf4 );\
        \cf5 userPasswordLabel\cf4 .setBounds(\cf9 50\cf4 ,\cf9 150\cf4 ,\cf9 75\cf4 ,\cf9 25\cf4 );\
\
        \cf5 messageLabel\cf4 .setBounds(\cf9 125\cf4 ,\cf9 250\cf4 ,\cf9 250\cf4 ,\cf9 35\cf4 );\
        \cf5 messageLabel\cf4 .setFont(\cf2 new \cf4 Font(\cf2 null\cf4 ,Font.
\f1\i \cf5 ITALIC
\f0\i0 \cf4 ,\cf9 25\cf4 ));\
\
        \cf5 userIDField\cf4 .setBounds(\cf9 125\cf4 ,\cf9 100\cf4 ,\cf9 200\cf4 ,\cf9 25\cf4 );\
        \cf5 userPasswordField\cf4 .setBounds(\cf9 125\cf4 ,\cf9 150\cf4 ,\cf9 200\cf4 ,\cf9 25\cf4 );\
\
        \cf5 loginButton\cf4 .setBounds(\cf9 125\cf4 ,\cf9 200\cf4 ,\cf9 100\cf4 ,\cf9 25\cf4 );\
        \cf5 loginButton\cf4 .setFocusable(\cf2 false\cf4 );\
        \cf5 loginButton\cf4 .addActionListener(\cf2 this\cf4 );\
\
        \cf5 resetButton\cf4 .setBounds(\cf9 225\cf4 ,\cf9 200\cf4 ,\cf9 100\cf4 ,\cf9 25\cf4 );\
        \cf5 resetButton\cf4 .setFocusable(\cf2 false\cf4 );\
        \cf5 resetButton\cf4 .addActionListener(\cf2 this\cf4 );\
\
        \cf8 // Adding all the components.\
        \cf5 frame\cf4 .add(\cf5 userIDLabel\cf4 );\
        \cf5 frame\cf4 .add(\cf5 userPasswordLabel\cf4 );\
        \cf5 frame\cf4 .add(\cf5 messageLabel\cf4 );\
        \cf5 frame\cf4 .add(\cf5 userIDField\cf4 );\
        \cf5 frame\cf4 .add(\cf5 userPasswordField\cf4 );\
        \cf5 frame\cf4 .add(\cf5 loginButton\cf4 );\
        \cf5 frame\cf4 .add(\cf5 resetButton\cf4 );\
        \cf5 frame\cf4 .setDefaultCloseOperation(JFrame.
\f1\i \cf5 EXIT_ON_CLOSE
\f0\i0 \cf4 );\
        \cf5 frame\cf4 .setSize(\cf9 420\cf4 ,\cf9 420\cf4 );\
        \cf5 frame\cf4 .setLayout(\cf2 null\cf4 ); \cf8 // No layout manager needed.\
        \cf5 frame\cf4 .setLocationRelativeTo(\cf2 null\cf4 ); \cf8 // Shows up in the middle.\
        \cf5 frame\cf4 .setVisible(\cf2 true\cf4 );\
    \}\
\
    \cf10 @Override\
    \cf2 public void \cf7 actionPerformed\cf4 (ActionEvent e) \{\
\
        \cf8 // Checking if the reset button was pressed.\
        \cf2 if\cf4 (e.getSource()==\cf5 resetButton\cf4 ) \{\
            \cf5 userIDField\cf4 .setText(\cf6 ""\cf4 );\
            \cf5 userPasswordField\cf4 .setText(\cf6 ""\cf4 ); \cf8 // Set both fields to nothing.\
        \cf4 \}\
\
        \cf2 if\cf4 (e.getSource()==\cf5 loginButton\cf4 ) \{ \cf8 // If the login button was pressed...\
\
            \cf4 String userID = \cf5 userIDField\cf4 .getText();\
            String password = String.
\f1\i valueOf
\f0\i0 (\cf5 userPasswordField\cf4 .getPassword());\
\
            \cf8 // If the username exists.\
            \cf2 if\cf4 (\cf5 logininfo\cf4 .containsKey(userID)) \{\
                \cf2 if\cf4 (\cf5 logininfo\cf4 .get(userID).equals(password)) \{ \cf8 // If the password is correct.\
                    \cf5 messageLabel\cf4 .setForeground(Color.
\f1\i \cf5 green
\f0\i0 \cf4 );\
                    \cf5 messageLabel\cf4 .setText(\cf6 "Login successful!"\cf4 );\
                    \cf5 frame\cf4 .dispose();\
                    MainWindow welcomePage = \cf2 new \cf4 MainWindow(userID); \cf8 // Creating MainWindow object.\
                    
\f1\i \cf4 showInstructions
\f0\i0 (); \cf8 // Showing instructions to the program.\
                \cf4 \}\
                \cf2 else \cf4 \{\
                    \cf5 messageLabel\cf4 .setForeground(Color.
\f1\i \cf5 red
\f0\i0 \cf4 ); \cf8 // If the password does not match.\
                    \cf5 messageLabel\cf4 .setText(\cf6 "Wrong password"\cf4 );\
                \}\
\
            \}\
            \cf2 else \cf4 \{\
                \cf5 messageLabel\cf4 .setForeground(Color.
\f1\i \cf5 red
\f0\i0 \cf4 ); \cf8 // If the username does not exist.\
                \cf5 messageLabel\cf4 .setText(\cf6 "Username not found"\cf4 );\
            \}\
        \}\
    \}\
\
    \cf2 public static void \cf7 showInstructions\cf4 () \cf8 // Show instructions.\
    \cf4 \{\
        JFrame frame = \cf2 new \cf4 JFrame();\
        frame.setLayout(\cf2 new \cf4 BorderLayout(\cf9 1\cf4 , \cf9 1\cf4 ));\
        frame.setSize(\cf9 800\cf4 , \cf9 300\cf4 );\
        frame.setLayout(\cf2 new \cf4 GridLayout(\cf9 1\cf4 , \cf9 1\cf4 ));\
        frame.setLocationRelativeTo(\cf2 null\cf4 );\
        frame.setTitle(\cf6 "Instructions"\cf4 );\
\
        JPanel panel = \cf2 new \cf4 JPanel();\
\
        \cf8 // Using HTML to ensure all the information is displayed.\
        \cf4 JLabel instructions = \cf2 new \cf4 JLabel(\cf6 "<html>Welcome to your online reading journal<br>Click the ADD BOOK button to add a book<br>After your book is added, click REFRESH CATALOG to refresh your catalog!<br>You'll be able to sort your books in various ways<br>You will also be able to see a visual representation of your books in your virtual bookshelf below<br>Happy reading!<br>Click the X when you are ready to start!"\cf4 );\
        panel.add(BorderLayout.
\f1\i \cf5 CENTER
\f0\i0 \cf4 , instructions);\
        Font instructionsFont = \cf2 new \cf4 Font(\cf6 "Serif"\cf4 , Font.
\f1\i \cf5 PLAIN
\f0\i0 \cf4 , \cf9 18\cf4 );\
        instructions.setFont(instructionsFont);\
        frame.add(panel);\
\
        frame.setVisible(\cf2 true\cf4 );\
    \}\
\}\
\
}